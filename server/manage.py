import click
import random
from apis.db.models.person import Person, Gender
from apis.db.models.address import Cellphone, Email
from apis.db.base import SessionLocal, Base, engine
from faker import Faker


@click.group()
def cli():
    pass


MALE_NAMES = [
    "Axel",
    "Arthur",
    "Evan",
    "Adrien",
    "Alexis",
    "Antoine",
    "Adam",
    "Alexandre",
    "Baptiste",
    "Enzo",
    "Julien",
    "Leo",
    "Lucas",
    "Matteo",
    "Mael",
    "Maxime",
    "Gabriel",
    "Raphael",
    "Pierre",
    "Quentin",
    "Hugo",
    "Romain",
    "Theo",
    "Tom",
    "Jules",
    "Nicolas",
    "Louis",
    "Mathis",
    "Nathan",
    "Paul",
    "Valentin",
    "Ethan",
    "Kylian",
    "Matheo",
    "Aaron",
    "Antonin",
    "Anthony",
    "Ayoub",
    "Bastien",
    "Alan",
    "Aymeric",
    "Bryan",
    "Charles",
    "Elias",
    "Dorian",
    "Dylan",
    "Alex",
    "Augustin",
    "Alban",
    "Aurelien",
    "Benjamin",
    "Arnaud",
    "Gael",
    "Gabin",
    "Guillaume",
    "Florian",
    "Corentin",
    "Jean",
    "Jeremy",
    "Diego",
    "Emilien",
    "Esteban",
    "David",
    "Etienne",
    "Damien",
    "Erwan",
    "Lukas",
    "Loic",
    "Lorenzo",
    "Mathias",
    "Matthieu",
    "Gaetan",
    "Gaspard",
    "Morgan",
    "Rafael",
    "Kilian",
    "Samuel",
    "Simon",
    "Kevin",
    "Sacha",
    "Tristan",
    "Victor",
    "Jordan",
    "Killian",
    "Marius",
    "Vincent",
    "Martin",
    "Yann",
    "Mateo",
    "William",
    "Luca",
    "Remi",
    "Oscar",
    "Robin",
    "Noe",
    "Tony",
    "Tiago",
    "Thibaut",
    "Bilal",
    "Thibault",
    "Eliot",
    "Elouan",
    "Ilan",
    "Eliott",
    "Julian",
    "Kyllian",
    "Ewan",
]
FEMALE_NAMES = [
    "Camille",
    "Anais",
    "Clara",
    "Emma",
    "Charlotte",
    "Celia",
    "Eva",
    "Ambre",
    "Clemence",
    "Juliette",
    "Lena",
    "Léa",
    "Jeanne",
    "Julie",
    "Maeva",
    "Mathilde",
    "Louise",
    "Lucie",
    "Manon",
    "Noemie",
    "Jade",
    "Ines",
    "Sarah",
    "Laura",
    "Lola",
    "Oceane",
    "Pauline",
    "Romane",
    "Zoe",
    "Lina",
    "Lisa",
    "Maëlys",
    "Alicia",
    "Andrea",
    "Audrey",
    "Angele",
    "Adele",
    "Alexia",
    "Amandine",
    "Angelina",
    "Chiara",
    "Claire",
    "Coralie",
    "Elsa",
    "Agathe",
    "Constance",
    "Eleonore",
    "Elisa",
    "Elodie",
    "Fanny",
    "Alice",
    "Anna",
    "Apolline",
    "Candice",
    "Charline",
    "Elise",
    "Emilie",
    "Amelie",
    "Axelle",
    "Capucine",
    "Flavie",
    "Heloise",
    "Emeline",
    "Eloise",
    "Leonie",
    "Carla",
    "Cassandra",
    "Clarisse",
    "Elina",
    "Clementine",
    "Elena",
    "Marion",
    "Melina",
    "Marine",
    "Melissa",
    "Lise",
    "Mailys",
    "Melanie",
    "Flora",
    "Gabrielle",
    "Ninon",
    "Rose",
    "Salome",
    "Julia",
    "Lana",
    "Valentine",
    "Sofia",
    "Justine",
    "Myriam",
    "Maelle",
    "Maud",
    "Yasmine",
    "Lucile",
    "Maya",
    "Olivia",
    "Nina",
    "Sara",
    "Chaima",
    "Solene",
    "Clea",
    "Victoire",
    "Victoria",
    "Assia",
    "Elea",
    "Anaelle",
    "Alyssa",
    "Ilona",
]
MIXE_NAMES = [
    "Lou",
    "Alix",
    "Ismael",
    "Johan",
    "Loris",
    "Davy",
    "Dominique",
    "Dany",
    "Felicite",
    "Claude",
    "Eleonor",
    "Felice",
    "Gillian",
    "Gil",
    "Hilarion",
    "Clarence",
    "Jehan",
    "Jillian",
    "Charlie",
    "Jessy",
    "Jody",
    "Joan",
    "Chris",
    "Lorin",
    "Mel",
    "Merry",
    "Loren",
    "Mari",
    "Marian",
    "Karel",
    "Jill",
    "Sydney",
    "Lee",
    "Lin",
    "Sidney",
    "Tais",
    "Van",
    "Kaelig",
    "Lalou",
    "Vivian",
    "Adile",
    "Maelig",
    "Aelig",
    "Angely",
    "Noor",
    "Nicky",
    "Aloise",
    "Brooklyn",
    "Thais",
    "Bazile",
    "Teri",
    "Terry",
    "Ceylan",
    "Côme",
    "Dylane",
    "Cory",
    "Deniz",
    "Djody",
    "Fortuna",
    "Amane",
    "Anice",
    "Elouane",
    "Emine",
    "Evane",
    "Bao",
    "Carmel",
    "Claudy",
    "Alaa",
    "Alvine",
    "Amal",
    "Angy",
    "Ganael",
    "Hilal",
    "Hong",
    "Iliane",
    "Jael",
    "Devy",
    "Dani",
    "Danny",
    "Ilkay",
    "Ivane",
    "Josua",
    "Kama",
    "Kande",
    "Elvan",
    "Engy",
    "Camerone",
    "Chan",
    "Donat",
    "Eden",
    "Ely",
    "Kamille",
    "Kerry",
    "Kim",
    "Johany",
    "Killiane",
    "Kriss",
    "Heidy",
    "Diya",
    "Gessy",
    "Flavy",
    "Leony",
    "Logane",
    "Lysandre",
    "Lillian",
    "Loann",
    "Mali",
]
NAMES = [
    "Martin",
    "Bernard",
    "Thomas",
    "Petit",
    "Robert",
    "Richard",
    "Durand",
    "Dubois",
    "Moreau",
    "Laurent",
    "Simon",
    "Michel",
    "Lefebvre",
    "Leroy",
    "Roux",
    "David",
    "Bertrand",
    "Morel",
    "Fournier",
    "Girard",
    "Bonnet",
    "Dupont",
    "Lambert",
    "Fontaine",
    "Rousseau",
    "Vincent",
    "Muller",
    "Lefevre",
    "Faure",
    "Andre",
    "Mercier",
    "Blanc",
    "Guerin",
    "Boyer",
    "Garnier",
    "Chevalier",
    "Francois",
    "Legrand",
    "Gauthier",
    "Garcia",
    "Perrin",
    "Robin",
    "Clement",
    "Morin",
    "Nicolas",
    "Henry",
    "Roussel",
    "Mathieu",
    "Gautier",
    "Masson",
    "Marchand",
    "Duval",
    "Denis",
    "Dumont",
    "Marie",
    "Lemaire",
    "Noel",
    "Meyer",
    "Dufour",
    "Meunier",
    "Brun",
    "Blanchard",
    "Giraud",
    "Joly",
    "Riviere",
    "Lucas",
    "Brunet",
    "Gaillard",
    "Barbier",
    "Arnaud",
    "Martinez",
    "Gerard",
    "Roche",
    "Renard",
    "Schmitt",
    "Roy",
    "Leroux",
    "Colin",
    "Vidal",
    "Caron",
    "Picard",
    "Roger",
    "Fabre",
    "Aubert",
    "Lemoine",
    "Renaud",
    "Dumas",
    "Lacroix",
    "Olivier",
    "Philippe",
    "Bourgeois",
    "Pierre",
    "Benoit",
    "Rey",
    "Leclerc",
    "Payet",
    "Rolland",
    "Leclercq",
    "Guillaume",
    "Lecomte",
    "Lopez",
    "Jean",
    "Dupuy",
    "Guillot",
    "Hubert",
    "Berger",
    "Carpentier",
    "Sanchez",
    "Dupuis",
    "Moulin",
    "Louis",
    "Deschamps",
    "Huet",
    "Vasseur",
    "Perez",
    "Boucher",
    "Fleury",
    "Royer",
    "Klein",
    "Jacquet",
    "Adam",
    "Paris",
    "Poirier",
    "Marty",
    "Aubry",
    "Guyot",
    "Carre",
    "Charles",
    "Renault",
    "Charpentier",
    "Menard",
    "Maillard",
    "Baron",
    "Bertin",
    "Bailly",
    "Herve",
    "Schneider",
    "Fernandez",
    "Le",
    "Collet",
    "Leger",
    "Bouvier",
    "Julien",
    "Prevost",
    "Millet",
    "Perrot",
    "Daniel",
    "Le",
    "Cousin",
    "Germain",
    "Breton",
    "Besson",
    "Langlois",
    "Remy",
    "Le",
    "Pelletier",
    "Leveque",
    "Perrier",
    "Leblanc",
    "Barre",
    "Lebrun",
    "Marchal",
    "Weber",
    "Mallet",
    "Hamon",
    "Boulanger",
    "Jacob",
    "Monnier",
    "Michaud",
    "Rodriguez",
    "Guichard",
    "Gillet",
    "Etienne",
    "Grondin",
    "Poulain",
    "Tessier",
    "Chevallier",
    "Collin",
    "Chauvin",
    "Da",
    "Bouchet",
    "Gay",
    "Lemaitre",
    "Benard",
    "Marechal",
    "Humbert",
    "Reynaud",
    "Antoine",
    "Hoarau",
    "Perret",
    "Barthelemy",
    "Cordier",
    "Pichon",
    "Lejeune",
    "Gilbert",
    "Lamy",
    "Delaunay",
    "Pasquier",
    "Carlier",
    "Laporte",
]
MAIL_DOMAINS = ["gmail.com", "orange.fr", "msn.fr", "toto.tutu"]
ENTITIES = 200


def get_one_personn():
    fake = Faker()
    birthdate = fake.date_between(start_date="-90y", end_date="today")
    gender_id = random.randint(1, 3)
    if gender_id == 1:
        first_name = random.choice(FEMALE_NAMES + MIXE_NAMES)
    elif gender_id == 2:
        first_name = random.choice(MALE_NAMES + MIXE_NAMES)
    elif gender_id == 3:
        first_name = random.choice(FEMALE_NAMES + MALE_NAMES + MIXE_NAMES)
    name = random.choice(NAMES)
    person = Person(
        gender_id=gender_id, birthdate=birthdate, name=name, first_name=first_name
    )
    email = f"{first_name}.{name}@{random.choice(MAIL_DOMAINS)}"
    Email(value=email, owner=person, is_public=random.choice([True, False]))
    for i in range(0, random.randint(1, 3)):
        Cellphone(
            value=fake.phone_number(),
            owner=person,
            is_public=random.choice([True, False]),
        )
    return person


@cli.command()
def init_db():
    db = SessionLocal()
    Base.metadata.create_all(bind=engine)
    genders = ["Female", "Male", "Other"]
    for gender in genders:
        db.add(Gender(value=gender))
    db.commit()
    db.close()


@cli.command()
def populate_db():
    for i in range(ENTITIES):
        db = SessionLocal()
        person = get_one_personn()
        db.add(person)
        db.commit()
    db.close()


@cli.command()
def drop_db():
    db = SessionLocal()
    Base.metadata.drop_all(bind=engine)
    db.close()


def print_one(person):
    print(
        person.id, person.name, person.first_name, person.birthdate, person.gender.value
    )
    print("email")
    print(person.email.id, person.email.type, person.email.value, person.email.is_public)
    print("cellphones")
    for cellphone in person.cellphones:
        print(cellphone.id, cellphone.value, cellphone.is_public)


@cli.command()
def random_person():
    db = SessionLocal()
    try:
        print(db.query(Person).count())
        person = db.query(Person).filter(Person.id == random.randint(0, ENTITIES)).one()
        # person = db.query(Person).order_by(Person.id.asc()).one()
        print_one(person)
    except Exception as e:
        print(person.id)
        import pdb

        pdb.set_trace()
    db.close()


if __name__ == "__main__":
    cli()
